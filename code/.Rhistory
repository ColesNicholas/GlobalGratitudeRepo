DF <- DF %>%
rename("Country.Name" = "ï..Country.Name") %>%
select(Country.Name:Indicator.Code,X2011:X2020)
DF_main <- readRDS(file = here("data", "GlobalGratitude_Final_Cleaned.Rds"))
DF_main <- DF_main %>%
mutate(country = case_when(
lab == "POL_01" ~ "Poland",
lab == "POL_02" ~ "Poland",
lab == "DNK_01" ~ "Denmark",
lab == "TUR_01" ~ "Turkey",
lab == "MYS_01" ~ "Malaysia",
lab == "USA_01" ~ "United States",
lab == "USA_02" ~ "United States",
lab == "USA_02b" ~ "United States",
lab == "USA_02c" ~ "United States",
lab == "NGA_01" ~ "Nigeria",
lab == "NGA_02" ~ "Nigeria",
lab == "CAN_01" ~ "Canada",
lab == "FRA_01" ~ "France",
lab == "AUS_01" ~ "Australia",
lab == "CHL_01" ~ "Chile",
lab == "DEU_01" ~ "Germany",
lab == "GRC_01" ~ "Greece",
lab == "HUN_01" ~ "Hungary",
lab == "ISR_01" ~ "Israel",
lab == "IRL_01" ~ "Ireland",
lab == "MEX_01" ~ "Mexico",
lab == "ITA_01" ~ "Italy",
lab == "PRT_01" ~ "Portugal",
lab == "BRA_01" ~ "Brazil",
lab == "NLD_01" ~ "Netherlands",
lab == "GBR_01" ~ "United Kingdom",
lab == "ESP_01" ~ "Spain",
lab == "ZAF_01" ~ "South Africa",
lab == "KOR_01" ~ "South Korea",
lab == "SWE_01" ~ "Sweden",
lab == "IND_01" ~ "India",
lab == "COL_01" ~ "Colombia",
lab == "CHN_01" ~ "China",
lab == "KAZ_01" ~ "Kazakhstan",
lab == "NOR_01" ~ "Norway",
lab == "JPN_01" ~ "Japan",
lab == "GHA_01" ~ "Ghana",
lab == "THA_01" ~ "Thailand",
lab == "MKD_01" ~ "Macedonia",
TRUE ~ NA_character_
)) %>%
filter(!is.na(country))
DF <- DF %>%
filter(Country.Name %in% unique(DF_main$country)) %>%
mutate(mean_GDP = rowMeans(select(., X2011:X2020), na.rm = TRUE))
saveRDS(DF,
file = here('data',
"GlobalGratitude_GDPpc_Cleaned.Rds"))
library(tidyverse)
library(here)
# specify directory
i_am("code/Cleaned_GDP.R")
#Fetch main survey data
DF <- read.csv(file = here("data", "GlobalGratitude_GDPpc.csv"))
DF <- DF %>%
rename("Country.Name" = "ï..Country.Name") %>%
select(Country.Name:Indicator.Code,X2011:X2020)
DF_main <- readRDS(file = here("data", "GlobalGratitude_Final_Cleaned.Rds"))
DF_main <- DF_main %>%
mutate(country = case_when(
lab == "POL_01" ~ "Poland",
lab == "POL_02" ~ "Poland",
lab == "DNK_01" ~ "Denmark",
lab == "TUR_01" ~ "Turkey",
lab == "MYS_01" ~ "Malaysia",
lab == "USA_01" ~ "United States",
lab == "USA_02" ~ "United States",
lab == "USA_02b" ~ "United States",
lab == "USA_02c" ~ "United States",
lab == "NGA_01" ~ "Nigeria",
lab == "NGA_02" ~ "Nigeria",
lab == "CAN_01" ~ "Canada",
lab == "FRA_01" ~ "France",
lab == "AUS_01" ~ "Australia",
lab == "CHL_01" ~ "Chile",
lab == "DEU_01" ~ "Germany",
lab == "GRC_01" ~ "Greece",
lab == "HUN_01" ~ "Hungary",
lab == "ISR_01" ~ "Israel",
lab == "IRL_01" ~ "Ireland",
lab == "MEX_01" ~ "Mexico",
lab == "ITA_01" ~ "Italy",
lab == "PRT_01" ~ "Portugal",
lab == "BRA_01" ~ "Brazil",
lab == "NLD_01" ~ "Netherlands",
lab == "GBR_01" ~ "United Kingdom",
lab == "ESP_01" ~ "Spain",
lab == "ZAF_01" ~ "South Africa",
lab == "KOR_01" ~ "South Korea",
lab == "SWE_01" ~ "Sweden",
lab == "IND_01" ~ "India",
lab == "COL_01" ~ "Colombia",
lab == "CHN_01" ~ "China",
lab == "KAZ_01" ~ "Kazakhstan",
lab == "NOR_01" ~ "Norway",
lab == "JPN_01" ~ "Japan",
lab == "GHA_01" ~ "Ghana",
lab == "THA_01" ~ "Thailand",
lab == "MKD_01" ~ "Macedonia",
TRUE ~ NA_character_
)) %>%
filter(!is.na(country))
DF <- DF %>%
filter(Country.Name %in% unique(DF_main$country)) %>%
mutate(mean_GDP = rowMeans(select(., X2011:X2020), na.rm = TRUE))
write.csv(DF,
file = here('data',
"GlobalGratitude_GDPpc_Cleaned.csv"))
#Download a library
install.packages("tidyverse")
library(tidyverse)
#tidyverse is a package that installs several useful packages for DF analysis!
#Open your DF file
#You should have this DFfile on your desktop home page
DF <- readRDS("GlobalGratitude_Final.RDS")
install.packages("tidyverse")
#Download a library
install.packages("tidyverse")
library(tidyverse)
#tidyverse is a package that installs several useful packages for DF analysis!
#Open your DF file
#You should have this DFfile on your desktop home page
DF <- readRDS("GlobalGratitude_Final.RDS")
install.packages("tidyverse")
#Download a library
install.packages("tidyverse")
library(tidyverse)
#tidyverse is a package that installs several useful packages for DF analysis!
#Open your DF file
#You should have this DFfile on your desktop home page
DF <- readRDS("GlobalGratitude_Final.RDS")
library(tidyverse)
library(here)
# specify directory
i_am("code/Cleaned_CrossCulturalMods.R")
library(tidyverse)
library(here)
# specify directory
i_am("code/Cleaned_CrossCulturalMods.R")
DF_main <- readRDS(file = here("data", "GlobalGratitude_Final_Cleaned.Rds"))
DF <- readRDS(file = here("data", "GlobalGratitude_Final_Cleaned.Rds"))
DF <- DF %>%
mutate(country = case_when(
lab == "POL_01" ~ "Poland",
lab == "POL_02" ~ "Poland",
lab == "DNK_01" ~ "Denmark",
lab == "TUR_01" ~ "Turkey",
lab == "MYS_01" ~ "Malaysia",
lab == "USA_01" ~ "United States of America",
lab == "USA_02" ~ "United States of America",
lab == "USA_02b" ~ "United States of America",
lab == "USA_02c" ~ "United States of America",
lab == "NGA_01" ~ "Nigeria",
lab == "NGA_02" ~ "Nigeria",
lab == "CAN_01" ~ "Canada",
lab == "FRA_01" ~ "France",
lab == "AUS_01" ~ "Australia",
lab == "CHL_01" ~ "Chile",
lab == "DEU_01" ~ "Germany",
lab == "GRC_01" ~ "Greece",
lab == "HUN_01" ~ "Hungary",
lab == "ISR_01" ~ "Israel",
lab == "IRL_01" ~ "Ireland",
lab == "MEX_01" ~ "Mexico",
lab == "ITA_01" ~ "Italy",
lab == "PRT_01" ~ "Portugal",
lab == "BRA_01" ~ "Brazil",
lab == "NLD_01" ~ "Netherlands",
lab == "GBR_01" ~ "United Kingdom",
lab == "ESP_01" ~ "Spain",
lab == "ZAF_01" ~ "South Africa",
lab == "KOR_01" ~ "South Korea",
lab == "SWE_01" ~ "Sweden",
lab == "IND_01" ~ "India",
lab == "COL_01" ~ "Colombia",
lab == "CHN_01" ~ "China",
lab == "KAZ_01" ~ "Kazakhstan",
lab == "NOR_01" ~ "Norway",
lab == "JPN_01" ~ "Japan",
lab == "GHA_01" ~ "Ghana",
lab == "THA_01" ~ "Thailand",
lab == "MKD_01" ~ "Macedonia",
TRUE ~ NA_character_
)) %>%
filter(!is.na(country))
country_counts <- map_data %>%
group_by(country) %>%
summarise(Participants = n())
install.packages("tidyverse")
install.packages("tidyverse")
DF <- DF %>%
mutate(country = case_when(
lab == "POL_01" ~ "Poland",
lab == "POL_02" ~ "Poland",
lab == "DNK_01" ~ "Denmark",
lab == "TUR_01" ~ "Turkey",
lab == "MYS_01" ~ "Malaysia",
lab == "USA_01" ~ "United States of America",
lab == "USA_02" ~ "United States of America",
lab == "USA_02b" ~ "United States of America",
lab == "USA_02c" ~ "United States of America",
lab == "NGA_01" ~ "Nigeria",
lab == "NGA_02" ~ "Nigeria",
lab == "CAN_01" ~ "Canada",
lab == "FRA_01" ~ "France",
lab == "AUS_01" ~ "Australia",
lab == "CHL_01" ~ "Chile",
lab == "DEU_01" ~ "Germany",
lab == "GRC_01" ~ "Greece",
lab == "HUN_01" ~ "Hungary",
lab == "ISR_01" ~ "Israel",
lab == "IRL_01" ~ "Ireland",
lab == "MEX_01" ~ "Mexico",
lab == "ITA_01" ~ "Italy",
lab == "PRT_01" ~ "Portugal",
lab == "BRA_01" ~ "Brazil",
lab == "NLD_01" ~ "Netherlands",
lab == "GBR_01" ~ "United Kingdom",
lab == "ESP_01" ~ "Spain",
lab == "ZAF_01" ~ "South Africa",
lab == "KOR_01" ~ "South Korea",
lab == "SWE_01" ~ "Sweden",
lab == "IND_01" ~ "India",
lab == "COL_01" ~ "Colombia",
lab == "CHN_01" ~ "China",
lab == "KAZ_01" ~ "Kazakhstan",
lab == "NOR_01" ~ "Norway",
lab == "JPN_01" ~ "Japan",
lab == "GHA_01" ~ "Ghana",
lab == "THA_01" ~ "Thailand",
lab == "MKD_01" ~ "Macedonia",
TRUE ~ NA_character_
)) %>%
filter(!is.na(country))
country_counts <- map_data %>%
group_by(country) %>%
summarise(Participants = n())
library(tidyverse)
library(effsize)
library(ggplot2)
library(metafor)
library(scales)
library(ggtext)
library(Matrix)
library(ggtext)
library(tidyr)
library(sf)
library(here)
country_counts <- map_data %>%
group_by(country) %>%
summarise(Participants = n())
country_counts <- DF %>%
group_by(country) %>%
summarise(Participants = n())
library(RColorBrewer)
library(rnaturalearth)
world_sf <- ne_download(scale = 110, type = "countries", category = "cultural", returnclass = "sf")
world_data <- world_sf %>%
left_join(country_counts, by = c("NAME" = "country"))
# Plot the map with sample sizes
ggplot(world_data) +
geom_sf(aes(fill = Participants), color = "white", size = 0.2) +
scale_fill_gradient(low = "blue", high = "red", name = "Participants", na.value = "gray90") +
labs(title = "World Map of Sample Sizes") +
theme_minimal() +
theme(
legend.position = "right",
plot.title = element_text(hjust = 0.5)
)
View(country_counts)
View(world_sf)
View(world_data)
View(DF)
library(tidyverse)
library(metafor)
library(ggExtra)
library(ggplot2)
library(ggrepel)
library(cowplot)
library(purrr)
library (here)
# open data
df <-
read.csv(file = 'unique_country_effect_sizes.csv')
# specify directory
i_am("code/Figure 2.Rmd")
# specify directory
i_am("code/Cleaned_CrossCulturalMods.R")
df <-
read.csv(file = 'unique_country_effect_sizes.csv')
df <-
read.csv(file = 'unique_country_effect_sizes.csv')
df <-
read.csv(file = "unique_country_effect_sizes.csv")
# specify directory
i_am("code/Cleaned_CrossCulturalMods.R")
df <-
read.csv(file = "unique_country_effect_sizes.csv")
DF <- read.csv(file = here("data", "unique_country_effect_sizes.csv"))
# List of effect size columns and variance columns
effect_size_columns <- c("pa_effect_size", "na_effect_size", "optimism_effect_size",
"ls_effect_size", "envy_effect_size",
"indebted_effect_size")
variance_columns <- c("pa_var", "na_var", "optimism_var",
"ls_var", "envy_var", "indebted_var")
# estimate total heterogeneity
m <- lapply(1:length(effect_size_columns), function(i) {
rma.mv(yi = df[[effect_size_columns[i]]],
V = df[[variance_columns[i]]],
data = df)
})
# open data
# specify directory
i_am("code/Figure 2.Rmd")
# List of effect size columns and variance columns
effect_size_columns <- c("pa_effect_size", "na_effect_size", "optimism_effect_size",
"ls_effect_size", "envy_effect_size",
"indebted_effect_size")
variance_columns <- c("pa_var", "na_var", "optimism_var",
"ls_var", "envy_var", "indebted_var")
# estimate total heterogeneity
m <- lapply(1:length(effect_size_columns), function(i) {
rma.mv(yi = df[[effect_size_columns[i]]],
V = df[[variance_columns[i]]],
data = df)
})
effect_size_columns <- c("pa_effect_size", "na_effect_size", "optimism_effect_size",
"ls_effect_size", "envy_effect_size",
"indebted_effect_size")
variance_columns <- c("pa_var", "na_var", "optimism_var",
"ls_var", "envy_var", "indebted_var")
# estimate total heterogeneity
m <- lapply(1:length(effect_size_columns), function(i) {
rma.mv(yi = df[[effect_size_columns[i]]],
V = df[[variance_columns[i]]],
data = df)
})
# Use lapply to fit models for each pair of effect size and variance
m.ic <- lapply(1:length(effect_size_columns), function(i) {
rma.mv(yi = df[[effect_size_columns[i]]],
V = df[[variance_columns[i]]],
random = list(~ 1 | intervention_condition, ~ 1 | country),
data = df)
m <- lapply(1:length(effect_size_columns), function(i) {
rma.mv(yi = df[[effect_size_columns[i]]],
V = df[[variance_columns[i]]],
data = df)
})
# Store the results with a name reflecting the effect size and variance pair
names(m.ic) <- paste(effect_size_columns)
# Apply the operations for each effect size column
d.c <- lapply(effect_size_columns, function(effect_size) {
d.c <- df %>%
group_by(country) %>%
summarise(m = mean(.data[[effect_size]]), .groups = "drop") %>%
# add [jittered] y-value to assist with plotting
mutate(y = 0,
y = jitter(y, .1)) %>%
# labels most extreme observations (in terms of min and max)
mutate(label = if_else(m == min(m),
true = country,
false = ""),
label = if_else(m == max(m),
true = country,
false = label)) %>%
# include effect size name for reference
mutate(effect_size = effect_size)
return(d.c)
})
d.i <- lapply(effect_size_columns, function(effect_size) {
d.i <- df %>%
group_by(intervention_condition) %>%
summarise(m = mean(.data[[effect_size]]), .groups = "drop") %>%
# add [jittered] y-value to assist with plotting
mutate(y = -0.02,
y = jitter(y, .1)) %>%
# labels most extreme observations (in terms of min and max)
mutate(label = if_else(m == min(m),
true = intervention_condition,
false = ""),
label = if_else(m == max(m),
true = intervention_condition,
false = label)) %>%
# include effect size name for reference
mutate(effect_size = effect_size)
return(d.i)
})
d.c <- bind_rows(d.c)
d.i <- bind_rows(d.i)
# Create a list of ggplot objects
m.d <- lapply(effect_size_columns, function(effect_size) {
# Extract the corresponding model (e.g., m.ic) for the effect size from the list of models
model <- m.ic[[which(effect_size_columns == effect_size)]]
# Create the plot for each effect size
plot <- ggplot() +
# Add overall effect size estimate
geom_point(aes(x = model$b[1],
y = 5.7),
shape = 18,
size = 4,
color = "grey30") +
# Add 95% CI of overall effect size estimate
geom_segment(aes(x = model$ci.lb,
xend = model$ci.ub,
y = 5.7),
color = "grey30") +
# Density plot: intervention-level sources of heterogeneity
stat_function(fun = dnorm,
args = list(mean = model$b[1],
sd = sqrt(model$sigma2[1])),
color = "#E64B35") +
# Density plot: country-level sources of heterogeneity
stat_function(fun = dnorm,
args = list(mean = model$b[1],
sd = sqrt(model$sigma2[2])),
color = "#3C5488") +
# Aesthetics
scale_x_continuous(limits = c(-0.75, 0.75)) +
scale_y_continuous(limits = c(0, 12)) +
theme_void()
# ggtitle(effect_size) +
# theme(plot.title = element_text(hjust = 0.5,
#                                 face = "bold",
#                                 size = 12,
#                                 margin = margin(b = 4)
#                                 )
#       )
return(plot)
})
# Check the resulting list of plots
m.d
# Combine both datasets into one data frame
d.c$dataset <- "d.c"
d.i$dataset <- "d.i"
d.c$intervention_condition <- NA
d.i$country <- NA
d.c.i <- rbind(d.c, d.i)
# Create a list of 6 plots based on the effect size values
m.p <- lapply(effect_size_columns, function(es) {
# Filter the data for the current effect_size level
data_subset <- subset(d.c.i, effect_size == es)
# Create the plot for the current effect_size
ggplot(data_subset) +
# Add country-level descriptives (for d.c)
geom_point(data = subset(data_subset, dataset == "d.c"),
aes(x = m, y = y),
color = "#3C5488", alpha = .5) +
# Add labels for country-level
geom_text_repel(data = subset(data_subset, dataset == "d.c"),
aes(x = m, y = y, label = label),
color = "#3C5488", alpha = .5, nudge_y = -.005) +
# Add intervention-level descriptives (for d.i)
geom_point(data = subset(data_subset, dataset == "d.i"),
aes(x = m, y = y),
color = "#E64B35", alpha = .5) +
# Add labels for intervention-level
geom_text_repel(data = subset(data_subset, dataset == "d.i"),
aes(x = m, y = y, label = label),
color = "#E64B35", alpha = .5, nudge_y = .005) +
# Aesthetics
theme_classic() +
theme(axis.title.y = element_blank(),
axis.title.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks.y = element_blank()) +
scale_x_continuous(limits = c(-1, 1))
#labs(x = expression("Cohens " * italic('d')))
})
# Check the resulting list of plots
m.p
# Combine m.d and m.p into a single list
combined_plots <- mapply(function(plot_d, plot_p) {
# Combine each pair of plots (one from m.d and one from m.p) into a list
plot_grid(plot_d, plot_p, ncol = 1, rel_heights = c(.5, 1))
}, m.d, m.p, SIMPLIFY = FALSE)
# combine the plot
grid <-
plot_grid(combined_plots[[1]],
combined_plots[[2]],
combined_plots[[3]],
combined_plots[[4]],
combined_plots[[5]],
combined_plots[[6]],
ncol = 3,
labels = paste0("   ",
LETTERS[1:6],
". ",
c('Positive affect',
'Negative affect',
'Optimism',
'Life satisfaction',
'Envy',
'Indebtedness')
),
label_size = 10,
label_x = 0,
hjust = 0,
vjust = 1.7
)
# add space at bottom
ggdraw() +
draw_plot(grid, 0, 0.05, 1, 0.95) +
draw_label(expression("Cohen's "*italic(d)),
x = 0.5, y = 0, vjust = -1, size = 10)
# Store the results with a name reflecting the effect size and variance pair
names(m.ic) <- paste(effect_size_columns)
